name: Gemini Code Review

on:
  pull_request:

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  code_review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: GrantBirki/git-diff-action@v2.4.0  # Obtém o diff do código alterado
        id: git-diff
        with:
          raw_diff_file_output: diff.txt
          file_output_only: "true"

      - name: Perform Code Review with Gemini
        id: code_review_suggestions
        run: |
          # Lendo as mudanças no código
          changed_code=$(cat ${{steps.git-diff.outputs.raw-diff-path}} | jq -Rs .)
          
          echo "PR Changes: $changed_code"
          
          # Fazendo a requisição para a API do Gemini
          response=$(curl -s -X POST "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${{ secrets.GEMINI_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d "$(jq -n --arg code "$changed_code" '{
              contents: [
                {
                  role: "system", 
                  parts: [
                    {
                      text: "Você é um revisor de código altamente qualificado, especializado em boas práticas de desenvolvimento e otimização. Seu objetivo é revisar o código fornecido e sugerir melhorias, como refatoração, melhorias de performance, legibilidade, e remoção de código desnecessário. Responda somente com o **diff** do código, sem explicações adicionais, exatamente como um PR de desenvolvedor."
                    }
                  ]
                },
                {
                  role: "user", 
                  parts: [
                    {
                      text: "Revise este código e sugira melhorias em formato de diff, seja direto:\n```diff\n$code\n```"
                    }
                  ]
                }
              ]
            }')")

          echo "API Response: $response"
          
          # Extraindo a resposta do Gemini
          code_review_suggestions=$(echo "$response" | jq -r '.candidates[0].content.parts[0].text' || echo "Erro ao analisar a resposta.")

          echo "$code_review_suggestions" > code_suggestions.txt

      - name: Add Code Suggestions Comment
        run: |
          # Ler e exibir as sugestões
          cat code_suggestions.txt
          
          # Formatar o comentário para o GitHub
          escaped_comments=$(jq -Rs . < code_suggestions.txt)
          
          # Postando o comentário no PR
          curl -s -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/comments \
            -d "{\"body\":$escaped_comments}"
